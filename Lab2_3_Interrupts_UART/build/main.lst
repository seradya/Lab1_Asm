ARM GAS  /tmp/ccPL9oOW.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ExecuteCommand.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 2A49444E 		.ascii	"*IDN?\000"
  20      3F00
  21 0006 0000     		.align	2
  22              	.LC1:
  23 0008 424D5354 		.ascii	"BMSTU, IU4, Lab3\000"
  23      552C2049 
  23      55342C20 
  23      4C616233 
  23      00
  24 0019 000000   		.align	2
  25              	.LC2:
  26 001c 53746172 		.ascii	"Start\000"
  26      7400
  27 0022 0000     		.align	2
  28              	.LC3:
  29 0024 4F6B2C20 		.ascii	"Ok, start\000"
  29      73746172 
  29      7400
  30 002e 0000     		.align	2
  31              	.LC4:
  32 0030 53746F70 		.ascii	"Stop\000"
  32      00
  33 0035 000000   		.align	2
  34              	.LC5:
  35 0038 4F6B2C20 		.ascii	"Ok, stop\000"
  35      73746F70 
  35      00
  36 0041 000000   		.align	2
  37              	.LC6:
  38 0044 556E6B6E 		.ascii	"Unknown command!\000"
  38      6F776E20 
  38      636F6D6D 
  38      616E6421 
  38      00
  39              		.section	.text.ExecuteCommand,"ax",%progbits
  40              		.align	1
  41              		.global	ExecuteCommand
  42              		.syntax unified
ARM GAS  /tmp/ccPL9oOW.s 			page 2


  43              		.thumb
  44              		.thumb_func
  46              	ExecuteCommand:
  47              	.LFB73:
  48              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** #include <string.h>
   3:Core/Src/main.c **** #include <stdbool.h>
   4:Core/Src/main.c **** #include "main.h"
   5:Core/Src/main.c **** #include "gpio.h"
   6:Core/Src/main.c **** #include "rcc.h"
   7:Core/Src/main.c **** #include "usart.h"
   8:Core/Src/main.c **** 
   9:Core/Src/main.c **** bool CommandRecieved;
  10:Core/Src/main.c **** char RxBuffer[256];
  11:Core/Src/main.c **** char TxBuffer[256];
  12:Core/Src/main.c **** 
  13:Core/Src/main.c **** int main(void)
  14:Core/Src/main.c **** {
  15:Core/Src/main.c **** 
  16:Core/Src/main.c ****   memset(RxBuffer,0,256);
  17:Core/Src/main.c ****   sysclk_init();        //System clock initializing 
  18:Core/Src/main.c ****   led_init();           //Initializing GPIO port for led
  19:Core/Src/main.c ****   tim2_init();          //initializing TIM2
  20:Core/Src/main.c ****   btn_init();           //User button initializingd
  21:Core/Src/main.c ****   usart_init();         //USART2 initialization
  22:Core/Src/main.c **** 
  23:Core/Src/main.c ****   while(true)
  24:Core/Src/main.c ****   {
  25:Core/Src/main.c ****     if(CommandRecieved)
  26:Core/Src/main.c ****     {
  27:Core/Src/main.c ****       ExecuteCommand();
  28:Core/Src/main.c ****     }
  29:Core/Src/main.c ****   }
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** }
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** void ExecuteCommand(void)
  35:Core/Src/main.c **** {
  49              		.loc 1 35 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 38B5     		push	{r3, r4, r5, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 16
  56              		.cfi_offset 3, -16
  57              		.cfi_offset 4, -12
  58              		.cfi_offset 5, -8
  59              		.cfi_offset 14, -4
  36:Core/Src/main.c ****   CommandRecieved = false;
  60              		.loc 1 36 3 view .LVU1
  61              		.loc 1 36 19 is_stmt 0 view .LVU2
  62 0002 264B     		ldr	r3, .L9
  63 0004 0022     		movs	r2, #0
  64 0006 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccPL9oOW.s 			page 3


  37:Core/Src/main.c **** 
  38:Core/Src/main.c ****   if(strncmp(RxBuffer, "*IDN?", 5) == 0)
  65              		.loc 1 38 3 is_stmt 1 view .LVU3
  66              		.loc 1 38 6 is_stmt 0 view .LVU4
  67 0008 0522     		movs	r2, #5
  68 000a 2549     		ldr	r1, .L9+4
  69 000c 2548     		ldr	r0, .L9+8
  70 000e FFF7FEFF 		bl	strncmp
  71              	.LVL0:
  72              		.loc 1 38 5 view .LVU5
  73 0012 C0B1     		cbz	r0, .L7
  39:Core/Src/main.c ****   {
  40:Core/Src/main.c ****     strcpy(TxBuffer,"BMSTU, IU4, Lab3");
  41:Core/Src/main.c ****   }
  42:Core/Src/main.c ****   else if(strncmp(RxBuffer, "Start", 5) == 0)
  74              		.loc 1 42 8 is_stmt 1 view .LVU6
  75              		.loc 1 42 11 is_stmt 0 view .LVU7
  76 0014 0522     		movs	r2, #5
  77 0016 2449     		ldr	r1, .L9+12
  78 0018 2248     		ldr	r0, .L9+8
  79 001a FFF7FEFF 		bl	strncmp
  80              	.LVL1:
  81              		.loc 1 42 10 view .LVU8
  82 001e 48B3     		cbz	r0, .L8
  43:Core/Src/main.c ****   {
  44:Core/Src/main.c ****     TIM2->CR1 |= TIM_CR1_CEN;
  45:Core/Src/main.c ****     strcpy(TxBuffer,"Ok, start");
  46:Core/Src/main.c ****   }
  47:Core/Src/main.c ****   else if(strncmp(RxBuffer, "Stop", 4) == 0)
  83              		.loc 1 47 8 is_stmt 1 view .LVU9
  84              		.loc 1 47 11 is_stmt 0 view .LVU10
  85 0020 0422     		movs	r2, #4
  86 0022 2249     		ldr	r1, .L9+16
  87 0024 1F48     		ldr	r0, .L9+8
  88 0026 FFF7FEFF 		bl	strncmp
  89              	.LVL2:
  90              		.loc 1 47 10 view .LVU11
  91 002a 0028     		cmp	r0, #0
  92 002c 2ED1     		bne	.L5
  48:Core/Src/main.c ****   {
  49:Core/Src/main.c ****     TIM2->CR1 &= ~TIM_CR1_CEN;
  93              		.loc 1 49 5 is_stmt 1 view .LVU12
  94              		.loc 1 49 15 is_stmt 0 view .LVU13
  95 002e 4FF08042 		mov	r2, #1073741824
  96 0032 1368     		ldr	r3, [r2]
  97 0034 23F00103 		bic	r3, r3, #1
  98 0038 1360     		str	r3, [r2]
  50:Core/Src/main.c ****     strcpy(TxBuffer,"Ok, stop");
  99              		.loc 1 50 5 is_stmt 1 view .LVU14
 100 003a 1D4A     		ldr	r2, .L9+20
 101 003c 1D4B     		ldr	r3, .L9+24
 102 003e 07CA     		ldm	r2, {r0, r1, r2}
 103 0040 03C3     		stmia	r3!, {r0, r1}
 104 0042 1A70     		strb	r2, [r3]
 105 0044 05E0     		b	.L3
 106              	.L7:
  40:Core/Src/main.c ****   }
ARM GAS  /tmp/ccPL9oOW.s 			page 4


 107              		.loc 1 40 5 view .LVU15
 108 0046 1B4C     		ldr	r4, .L9+24
 109 0048 1B4D     		ldr	r5, .L9+28
 110 004a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 111 004c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 112 004e 2B68     		ldr	r3, [r5]
 113 0050 2370     		strb	r3, [r4]
 114              	.L3:
  51:Core/Src/main.c ****   }
  52:Core/Src/main.c ****   else
  53:Core/Src/main.c ****   {
  54:Core/Src/main.c ****     strcpy(TxBuffer,"Unknown command!");
  55:Core/Src/main.c ****   }
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****   SendString(TxBuffer);
 115              		.loc 1 58 3 view .LVU16
 116 0052 184C     		ldr	r4, .L9+24
 117 0054 2046     		mov	r0, r4
 118 0056 FFF7FEFF 		bl	SendString
 119              	.LVL3:
  59:Core/Src/main.c ****   memset(RxBuffer,0,256);
 120              		.loc 1 59 3 view .LVU17
 121 005a 4FF48075 		mov	r5, #256
 122 005e 2A46     		mov	r2, r5
 123 0060 0021     		movs	r1, #0
 124 0062 1048     		ldr	r0, .L9+8
 125 0064 FFF7FEFF 		bl	memset
 126              	.LVL4:
  60:Core/Src/main.c ****   memset(TxBuffer,0,256);
 127              		.loc 1 60 3 view .LVU18
 128 0068 2A46     		mov	r2, r5
 129 006a 0021     		movs	r1, #0
 130 006c 2046     		mov	r0, r4
 131 006e FFF7FEFF 		bl	memset
 132              	.LVL5:
  61:Core/Src/main.c **** }
 133              		.loc 1 61 1 is_stmt 0 view .LVU19
 134 0072 38BD     		pop	{r3, r4, r5, pc}
 135              	.L8:
  44:Core/Src/main.c ****     strcpy(TxBuffer,"Ok, start");
 136              		.loc 1 44 5 is_stmt 1 view .LVU20
  44:Core/Src/main.c ****     strcpy(TxBuffer,"Ok, start");
 137              		.loc 1 44 15 is_stmt 0 view .LVU21
 138 0074 4FF08042 		mov	r2, #1073741824
 139 0078 1368     		ldr	r3, [r2]
 140 007a 43F00103 		orr	r3, r3, #1
 141 007e 1360     		str	r3, [r2]
  45:Core/Src/main.c ****   }
 142              		.loc 1 45 5 is_stmt 1 view .LVU22
 143 0080 0E4A     		ldr	r2, .L9+32
 144 0082 0C4B     		ldr	r3, .L9+24
 145 0084 07CA     		ldm	r2, {r0, r1, r2}
 146 0086 03C3     		stmia	r3!, {r0, r1}
 147 0088 1A80     		strh	r2, [r3]	@ movhi
 148 008a E2E7     		b	.L3
 149              	.L5:
ARM GAS  /tmp/ccPL9oOW.s 			page 5


  54:Core/Src/main.c ****   }
 150              		.loc 1 54 5 view .LVU23
 151 008c 094C     		ldr	r4, .L9+24
 152 008e 0C4D     		ldr	r5, .L9+36
 153 0090 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 154 0092 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 155 0094 2B68     		ldr	r3, [r5]
 156 0096 2370     		strb	r3, [r4]
 157 0098 DBE7     		b	.L3
 158              	.L10:
 159 009a 00BF     		.align	2
 160              	.L9:
 161 009c 00000000 		.word	.LANCHOR0
 162 00a0 00000000 		.word	.LC0
 163 00a4 00000000 		.word	.LANCHOR1
 164 00a8 1C000000 		.word	.LC2
 165 00ac 30000000 		.word	.LC4
 166 00b0 38000000 		.word	.LC5
 167 00b4 00000000 		.word	.LANCHOR2
 168 00b8 08000000 		.word	.LC1
 169 00bc 24000000 		.word	.LC3
 170 00c0 44000000 		.word	.LC6
 171              		.cfi_endproc
 172              	.LFE73:
 174              		.section	.text.main,"ax",%progbits
 175              		.align	1
 176              		.global	main
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	main:
 182              	.LFB72:
  14:Core/Src/main.c **** 
 183              		.loc 1 14 1 view -0
 184              		.cfi_startproc
 185              		@ Volatile: function does not return.
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
  16:Core/Src/main.c ****   sysclk_init();        //System clock initializing 
 193              		.loc 1 16 3 view .LVU25
 194 0002 4FF48072 		mov	r2, #256
 195 0006 0021     		movs	r1, #0
 196 0008 0948     		ldr	r0, .L15
 197 000a FFF7FEFF 		bl	memset
 198              	.LVL6:
  17:Core/Src/main.c ****   led_init();           //Initializing GPIO port for led
 199              		.loc 1 17 3 view .LVU26
 200 000e FFF7FEFF 		bl	sysclk_init
 201              	.LVL7:
  18:Core/Src/main.c ****   tim2_init();          //initializing TIM2
 202              		.loc 1 18 3 view .LVU27
 203 0012 FFF7FEFF 		bl	led_init
ARM GAS  /tmp/ccPL9oOW.s 			page 6


 204              	.LVL8:
  19:Core/Src/main.c ****   btn_init();           //User button initializingd
 205              		.loc 1 19 3 view .LVU28
 206 0016 FFF7FEFF 		bl	tim2_init
 207              	.LVL9:
  20:Core/Src/main.c ****   usart_init();         //USART2 initialization
 208              		.loc 1 20 3 view .LVU29
 209 001a FFF7FEFF 		bl	btn_init
 210              	.LVL10:
  21:Core/Src/main.c **** 
 211              		.loc 1 21 3 view .LVU30
 212 001e FFF7FEFF 		bl	usart_init
 213              	.LVL11:
 214              	.L12:
  23:Core/Src/main.c ****   {
 215              		.loc 1 23 3 view .LVU31
  25:Core/Src/main.c ****     {
 216              		.loc 1 25 5 view .LVU32
  25:Core/Src/main.c ****     {
 217              		.loc 1 25 8 is_stmt 0 view .LVU33
 218 0022 044B     		ldr	r3, .L15+4
 219 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  25:Core/Src/main.c ****     {
 220              		.loc 1 25 7 view .LVU34
 221 0026 002B     		cmp	r3, #0
 222 0028 FBD0     		beq	.L12
  27:Core/Src/main.c ****     }
 223              		.loc 1 27 7 is_stmt 1 view .LVU35
 224 002a FFF7FEFF 		bl	ExecuteCommand
 225              	.LVL12:
 226 002e F8E7     		b	.L12
 227              	.L16:
 228              		.align	2
 229              	.L15:
 230 0030 00000000 		.word	.LANCHOR1
 231 0034 00000000 		.word	.LANCHOR0
 232              		.cfi_endproc
 233              	.LFE72:
 235              		.section	.text.delay,"ax",%progbits
 236              		.align	1
 237              		.global	delay
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	delay:
 243              	.LVL13:
 244              	.LFB74:
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** void delay(uint32_t value)
  64:Core/Src/main.c **** {
 245              		.loc 1 64 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              		.loc 1 64 1 is_stmt 0 view .LVU37
 251 0000 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccPL9oOW.s 			page 7


 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 8
  65:Core/Src/main.c ****   for(volatile uint32_t i = 0; i < value; i++);
 254              		.loc 1 65 3 is_stmt 1 view .LVU38
 255              	.LBB2:
 256              		.loc 1 65 7 view .LVU39
 257              		.loc 1 65 25 is_stmt 0 view .LVU40
 258 0002 0023     		movs	r3, #0
 259 0004 0193     		str	r3, [sp, #4]
 260              		.loc 1 65 3 view .LVU41
 261 0006 02E0     		b	.L18
 262              	.L19:
 263              		.loc 1 65 47 is_stmt 1 discriminator 3 view .LVU42
 264              		.loc 1 65 43 discriminator 3 view .LVU43
 265              		.loc 1 65 44 is_stmt 0 discriminator 3 view .LVU44
 266 0008 019B     		ldr	r3, [sp, #4]
 267 000a 0133     		adds	r3, r3, #1
 268 000c 0193     		str	r3, [sp, #4]
 269              	.L18:
 270              		.loc 1 65 32 is_stmt 1 discriminator 1 view .LVU45
 271              		.loc 1 65 34 is_stmt 0 discriminator 1 view .LVU46
 272 000e 019B     		ldr	r3, [sp, #4]
 273              		.loc 1 65 3 discriminator 1 view .LVU47
 274 0010 8342     		cmp	r3, r0
 275 0012 F9D3     		bcc	.L19
 276              	.LBE2:
  66:Core/Src/main.c **** }...
 277              		.loc 1 66 1 view .LVU48
 278 0014 02B0     		add	sp, sp, #8
 279              	.LCFI3:
 280              		.cfi_def_cfa_offset 0
 281              		@ sp needed
 282 0016 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE74:
 286              		.global	TxBuffer
 287              		.global	RxBuffer
 288              		.global	CommandRecieved
 289              		.section	.bss.CommandRecieved,"aw",%nobits
 290              		.set	.LANCHOR0,. + 0
 293              	CommandRecieved:
 294 0000 00       		.space	1
 295              		.section	.bss.RxBuffer,"aw",%nobits
 296              		.align	2
 297              		.set	.LANCHOR1,. + 0
 300              	RxBuffer:
 301 0000 00000000 		.space	256
 301      00000000 
 301      00000000 
 301      00000000 
 301      00000000 
 302              		.section	.bss.TxBuffer,"aw",%nobits
 303              		.align	2
 304              		.set	.LANCHOR2,. + 0
 307              	TxBuffer:
 308 0000 00000000 		.space	256
 308      00000000 
ARM GAS  /tmp/ccPL9oOW.s 			page 8


 308      00000000 
 308      00000000 
 308      00000000 
 309              		.text
 310              	.Letext0:
 311              		.file 2 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_de
 312              		.file 3 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint
 313              		.file 4 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l152xc.h"
 314              		.file 5 "/home/seradya/toolchains/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/string.h"
 315              		.file 6 "Core/Inc/usart.h"
 316              		.file 7 "Core/Inc/rcc.h"
 317              		.file 8 "Core/Inc/gpio.h"
 318              		.file 9 "<built-in>"
ARM GAS  /tmp/ccPL9oOW.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPL9oOW.s:18     .rodata.ExecuteCommand.str1.4:0000000000000000 $d
     /tmp/ccPL9oOW.s:40     .text.ExecuteCommand:0000000000000000 $t
     /tmp/ccPL9oOW.s:46     .text.ExecuteCommand:0000000000000000 ExecuteCommand
     /tmp/ccPL9oOW.s:161    .text.ExecuteCommand:000000000000009c $d
     /tmp/ccPL9oOW.s:175    .text.main:0000000000000000 $t
     /tmp/ccPL9oOW.s:181    .text.main:0000000000000000 main
     /tmp/ccPL9oOW.s:230    .text.main:0000000000000030 $d
     /tmp/ccPL9oOW.s:236    .text.delay:0000000000000000 $t
     /tmp/ccPL9oOW.s:242    .text.delay:0000000000000000 delay
     /tmp/ccPL9oOW.s:307    .bss.TxBuffer:0000000000000000 TxBuffer
     /tmp/ccPL9oOW.s:300    .bss.RxBuffer:0000000000000000 RxBuffer
     /tmp/ccPL9oOW.s:293    .bss.CommandRecieved:0000000000000000 CommandRecieved
     /tmp/ccPL9oOW.s:294    .bss.CommandRecieved:0000000000000000 $d
     /tmp/ccPL9oOW.s:296    .bss.RxBuffer:0000000000000000 $d
     /tmp/ccPL9oOW.s:303    .bss.TxBuffer:0000000000000000 $d

UNDEFINED SYMBOLS
strncmp
SendString
memset
sysclk_init
led_init
tim2_init
btn_init
usart_init
